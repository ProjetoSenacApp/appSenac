'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.createMigrationsTable = exports.getDatabaseVersion = undefined;

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var getDatabaseVersion = exports.getDatabaseVersion = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
        var row, relationDoesNotExistErrorCode;
        return _regenerator2.default.wrap(function _callee$(_context) {
            while (1) {
                switch (_context.prev = _context.next) {
                    case 0:
                        _context.prev = 0;
                        _context.next = 3;
                        return _legoSql2.default.sql(_templateObject).first();

                    case 3:
                        row = _context.sent;

                        if (!row) {
                            _context.next = 6;
                            break;
                        }

                        return _context.abrupt('return', row.version);

                    case 6:
                        return _context.abrupt('return', 0);

                    case 9:
                        _context.prev = 9;
                        _context.t0 = _context['catch'](0);
                        relationDoesNotExistErrorCode = '42P01';

                        if (!(_context.t0.code === relationDoesNotExistErrorCode || _context.t0.sqlState === relationDoesNotExistErrorCode)) {
                            _context.next = 16;
                            break;
                        }

                        return _context.abrupt('return', 0);

                    case 16:
                        throw _context.t0;

                    case 17:
                    case 'end':
                        return _context.stop();
                }
            }
        }, _callee, this, [[0, 9]]);
    }));

    return function getDatabaseVersion() {
        return _ref.apply(this, arguments);
    };
}();

var createMigrationsTable = exports.createMigrationsTable = function () {
    var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2() {
        var schemaAlreadyExistsErrorCode;
        return _regenerator2.default.wrap(function _callee2$(_context2) {
            while (1) {
                switch (_context2.prev = _context2.next) {
                    case 0:
                        _context2.prev = 0;
                        _context2.next = 3;
                        return _legoSql2.default.sql(_templateObject2);

                    case 3:
                        _context2.next = 12;
                        break;

                    case 5:
                        _context2.prev = 5;
                        _context2.t0 = _context2['catch'](0);
                        schemaAlreadyExistsErrorCode = '42P06';

                        if (!(_context2.t0.code == schemaAlreadyExistsErrorCode || _context2.t0.sqlState === schemaAlreadyExistsErrorCode)) {
                            _context2.next = 11;
                            break;
                        }

                        _context2.next = 12;
                        break;

                    case 11:
                        throw _context2.t0;

                    case 12:
                    case 'end':
                        return _context2.stop();
                }
            }
        }, _callee2, this, [[0, 5]]);
    }));

    return function createMigrationsTable() {
        return _ref2.apply(this, arguments);
    };
}();

var _templateObject = (0, _taggedTemplateLiteral3.default)(['SELECT version FROM lego.migrations ORDER BY created_at DESC LIMIT 1'], ['SELECT version FROM lego.migrations ORDER BY created_at DESC LIMIT 1']),
    _templateObject2 = (0, _taggedTemplateLiteral3.default)(['CREATE SCHEMA lego CREATE TABLE migrations (\n            version INTEGER,\n            created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP\n        )'], ['CREATE SCHEMA lego CREATE TABLE migrations (\n            version INTEGER,\n            created_at TIMESTAMP WITHOUT TIME ZONE DEFAULT CURRENT_TIMESTAMP\n        )']),
    _templateObject3 = (0, _taggedTemplateLiteral3.default)(['INSERT INTO lego.migrations (version) VALUES (', ')'], ['INSERT INTO lego.migrations (version) VALUES (', ')']);

exports.insertMigration = insertMigration;

var _legoSql = require('lego-sql');

var _legoSql2 = _interopRequireDefault(_legoSql);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function insertMigration(version) {
    return _legoSql2.default.sql(_templateObject3, version);
}