!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("firebase/app"),require("rxjs"),require("rxjs/operators"),require("@angular/fire"),require("@angular/common")):"function"==typeof define&&define.amd?define("@angular/fire/messaging",["exports","@angular/core","firebase/app","rxjs","rxjs/operators","@angular/fire","@angular/common"],r):r(((e=e||self).angular=e.angular||{},e.angular.fire=e.angular.fire||{},e.angular.fire.messaging={}),e.ng.core,e.firebase,e.rxjs,e.rxjs.operators,e.angular.fire,e.ng.common)}(this,(function(e,r,n,t,i,s,o){"use strict";n=n&&Object.prototype.hasOwnProperty.call(n,"default")?n.default:n;var u=function(e,r,u,a){var p=this,c=new s.ɵAngularFireSchedulers(a),g=t.of(void 0).pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(){return o.isPlatformServer(u)?t.EMPTY:import("firebase/messaging")})),i.map((function(){return s.ɵfirebaseAppFactory(e,a,r)})),i.map((function(e){return e.messaging()})),i.shareReplay({bufferSize:1,refCount:!1}));this.requestPermission=g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(e){return n.messaging.isSupported()?e.requestPermission():t.throwError("Not supported.")}))),this.getToken=g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(e){return n.messaging.isSupported()&&"granted"===Notification.permission?e.getToken():t.EMPTY})),i.defaultIfEmpty(null));var f=g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(e){return n.messaging.isSupported()?new t.Observable((function(r){return e.onTokenRefresh(r.next,r.error,r.complete)})):t.EMPTY})),i.switchMapTo(this.getToken));return this.tokenChanges=g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(e){return n.messaging.isSupported()?t.concat(p.getToken,f):t.EMPTY}))),this.messages=g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(e){return n.messaging.isSupported()?new t.Observable((function(r){return e.onMessage((function(e){return r.next(e)}),(function(e){return r.error(e)}),(function(){return r.complete()}))})):t.EMPTY}))),this.requestToken=t.of(void 0).pipe(i.switchMap((function(){return p.requestPermission})),i.catchError((function(){return t.of(null)})),i.mergeMap((function(){return p.tokenChanges}))),this.deleteToken=function(e){return g.pipe(i.subscribeOn(c.outsideAngular),i.observeOn(c.insideAngular),i.switchMap((function(r){return r.deleteToken(e)})),i.defaultIfEmpty(!1))},s.ɵlazySDKProxy(this,g,a)};u.decorators=[{type:r.Injectable,args:[{providedIn:"any"}]}],u.ctorParameters=function(){return[{type:void 0,decorators:[{type:r.Inject,args:[s.FIREBASE_OPTIONS]}]},{type:void 0,decorators:[{type:r.Optional},{type:r.Inject,args:[s.FIREBASE_APP_NAME]}]},{type:Object,decorators:[{type:r.Inject,args:[r.PLATFORM_ID]}]},{type:r.NgZone}]},u.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new u(r.ɵɵinject(s.FIREBASE_OPTIONS),r.ɵɵinject(s.FIREBASE_APP_NAME,8),r.ɵɵinject(r.PLATFORM_ID),r.ɵɵinject(r.NgZone))},token:u,providedIn:"any"});var a=function(){};a.decorators=[{type:r.NgModule,args:[{providers:[u]}]}],e.AngularFireMessaging=u,e.AngularFireMessagingModule=a,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=angular-fire-messaging.umd.min.js.map