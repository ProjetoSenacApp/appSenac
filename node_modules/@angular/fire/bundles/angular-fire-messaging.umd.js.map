{"version":3,"file":"angular-fire-messaging.umd.js","sources":["../../../src/messaging/messaging.ts","../../../src/messaging/messaging.module.ts"],"sourcesContent":["import { Inject, Injectable, NgZone, Optional, PLATFORM_ID } from '@angular/core';\nimport { messaging } from 'firebase/app';\nimport firebase from 'firebase/app';\nimport { concat, EMPTY, Observable, of, throwError, fromEvent } from 'rxjs';\nimport { catchError, defaultIfEmpty, map, mergeMap, observeOn, switchMap, switchMapTo, shareReplay, filter, subscribeOn } from 'rxjs/operators';\nimport {\n  FIREBASE_APP_NAME,\n  FIREBASE_OPTIONS,\n  FirebaseAppConfig,\n  FirebaseOptions,\n  ɵAngularFireSchedulers,\n  ɵfirebaseAppFactory,\n  ɵlazySDKProxy,\n  ɵPromiseProxy\n} from '@angular/fire';\nimport { isPlatformServer } from '@angular/common';\n\nexport interface AngularFireMessaging extends Omit<ɵPromiseProxy<messaging.Messaging>, 'deleteToken' | 'getToken' | 'requestPermission'> {\n}\n\n@Injectable({\n  providedIn: 'any'\n})\nexport class AngularFireMessaging {\n\n  public readonly requestPermission: Observable<void>;\n  public readonly getToken: Observable<string | null>;\n  public readonly tokenChanges: Observable<string | null>;\n  public readonly messages: Observable<{}>;\n  public readonly requestToken: Observable<string | null>;\n  public readonly deleteToken: (token: string) => Observable<boolean>;\n\n  constructor(\n    @Inject(FIREBASE_OPTIONS) options: FirebaseOptions,\n    @Optional() @Inject(FIREBASE_APP_NAME) nameOrConfig: string | FirebaseAppConfig | null | undefined,\n    // tslint:disable-next-line:ban-types\n    @Inject(PLATFORM_ID) platformId: Object,\n    zone: NgZone\n  ) {\n    const schedulers = new ɵAngularFireSchedulers(zone);\n\n    const messaging = of(undefined).pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(() => isPlatformServer(platformId) ? EMPTY : import('firebase/messaging')),\n      map(() => ɵfirebaseAppFactory(options, zone, nameOrConfig)),\n      map(app => app.messaging()),\n      shareReplay({ bufferSize: 1, refCount: false })\n    );\n\n    this.requestPermission = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      // tslint:disable-next-line\n      switchMap(messaging => firebase.messaging.isSupported() ? messaging.requestPermission() : throwError('Not supported.'))\n    );\n\n    this.getToken = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() && Notification.permission === 'granted' ? messaging.getToken() : EMPTY),\n      defaultIfEmpty(null)\n    );\n\n    const tokenChanges = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? new Observable<string>(emitter =>\n        messaging.onTokenRefresh(emitter.next, emitter.error, emitter.complete)\n      ) : EMPTY),\n      switchMapTo(this.getToken)\n    );\n\n    this.tokenChanges = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? concat(this.getToken, tokenChanges) : EMPTY)\n    );\n\n\n    this.messages = messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => firebase.messaging.isSupported() ? new Observable<string>(emitter =>\n        messaging.onMessage(next => emitter.next(next), err => emitter.error(err), () => emitter.complete())\n      ) : EMPTY),\n    );\n\n    this.requestToken = of(undefined).pipe(\n      switchMap(() => this.requestPermission),\n      catchError(() => of(null)),\n      mergeMap(() => this.tokenChanges)\n    );\n\n    this.deleteToken = (token: string) => messaging.pipe(\n      subscribeOn(schedulers.outsideAngular),\n      observeOn(schedulers.insideAngular),\n      switchMap(messaging => messaging.deleteToken(token)),\n      defaultIfEmpty(false)\n    );\n\n    return ɵlazySDKProxy(this, messaging, zone);\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { AngularFireMessaging } from './messaging';\n\n@NgModule({\n  providers: [ AngularFireMessaging ]\n})\nexport class AngularFireMessagingModule { }\n"],"names":["ɵAngularFireSchedulers","of","subscribeOn","observeOn","switchMap","isPlatformServer","EMPTY","map","ɵfirebaseAppFactory","shareReplay","throwError","defaultIfEmpty","Observable","switchMapTo","concat","catchError","mergeMap","ɵlazySDKProxy","Injectable","Inject","FIREBASE_OPTIONS","Optional","FIREBASE_APP_NAME","PLATFORM_ID","NgZone","NgModule"],"mappings":"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"}