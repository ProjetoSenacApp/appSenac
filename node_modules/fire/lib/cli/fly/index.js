'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');

var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _promise = require('babel-runtime/core-js/promise');

var _promise2 = _interopRequireDefault(_promise);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _chokidar = require('chokidar');

var _chokidar2 = _interopRequireDefault(_chokidar);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _sqlModels = require('sql-models');

var _fireWebpack = require('fire-webpack');

var _child_process = require('child_process');

var _fireLog = require('fire-log');

var _fireLog2 = _interopRequireDefault(_fireLog);

var _rimraf = require('rimraf');

var _rimraf2 = _interopRequireDefault(_rimraf);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var log = new _fireLog2.default('fire-cli:fly');

exports.default = function () {
    var _ref = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee3(entry, argv) {
        var _this = this;

        var startWeb = function () {
            var _ref2 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee() {
                return _regenerator2.default.wrap(function _callee$(_context) {
                    while (1) {
                        switch (_context.prev = _context.next) {
                            case 0:
                                log.info('startWeb!');

                                if (!web) {
                                    _context.next = 4;
                                    break;
                                }

                                _context.next = 4;
                                return new _promise2.default(function (resolve) {
                                    web.on('close', function () {
                                        resolve();
                                    });
                                });

                            case 4:

                                web = (0, _child_process.spawn)('fire', ['start', '--web'], {
                                    stdio: 'inherit'
                                });

                                web.on('error', function (error) {
                                    log.error(error);
                                });

                                web.on('close', function (code) {
                                    if (code !== 0) {
                                        log.info('grep process exited with code ' + code);
                                    }

                                    web = null;
                                });

                            case 7:
                            case 'end':
                                return _context.stop();
                        }
                    }
                }, _callee, this);
            }));

            return function startWeb() {
                return _ref2.apply(this, arguments);
            };
        }();

        var baseDir, baseDirLength, watcher, web, workers, startWorkers;
        return _regenerator2.default.wrap(function _callee3$(_context3) {
            while (1) {
                switch (_context3.prev = _context3.next) {
                    case 0:
                        startWorkers = function startWorkers() {
                            //
                        };

                        log.info('fly()');

                        baseDir = _path2.default.join(process.cwd(), 'src');
                        baseDirLength = baseDir.length + _path2.default.sep.length;
                        watcher = _chokidar2.default.watch(baseDir, {
                            persistent: true
                        });
                        web = null;
                        workers = null;


                        watcher.on('change', function () {
                            var _ref3 = (0, _asyncToGenerator3.default)(_regenerator2.default.mark(function _callee2(changedPath) {
                                var filePath, _filePath$split, _filePath$split2, folder, isClientChange, isModelChange, isWorkerChange;

                                return _regenerator2.default.wrap(function _callee2$(_context2) {
                                    while (1) {
                                        switch (_context2.prev = _context2.next) {
                                            case 0:
                                                filePath = changedPath.slice(baseDirLength);
                                                _filePath$split = filePath.split(_path2.default.sep), _filePath$split2 = (0, _slicedToArray3.default)(_filePath$split, 1), folder = _filePath$split2[0];
                                                isClientChange = folder === 'components' || folder === 'containers' || folder === 'stores';

                                                if (!isClientChange) {
                                                    _context2.next = 6;
                                                    break;
                                                }

                                                _context2.next = 22;
                                                break;

                                            case 6:
                                                isModelChange = folder === 'models';
                                                isWorkerChange = folder === 'workers';

                                                if (!isModelChange) {
                                                    _context2.next = 11;
                                                    break;
                                                }

                                                _context2.next = 11;
                                                return (0, _sqlModels.createMigrations)();

                                            case 11:
                                                _context2.prev = 11;
                                                _context2.next = 14;
                                                return _promise2.default.all([(0, _fireWebpack.createServerBundle)(entry), (0, _fireWebpack.createLib)(entry)]);

                                            case 14:

                                                startWeb();

                                                if (isWorkerChange) {
                                                    startWorkers();
                                                }
                                                _context2.next = 22;
                                                break;

                                            case 18:
                                                _context2.prev = 18;
                                                _context2.t0 = _context2['catch'](11);

                                                console.log('exception in babel/build');
                                                console.log(_context2.t0);

                                            case 22:
                                            case 'end':
                                                return _context2.stop();
                                        }
                                    }
                                }, _callee2, _this, [[11, 18]]);
                            }));

                            return function (_x3) {
                                return _ref3.apply(this, arguments);
                            };
                        }());

                        _rimraf2.default.sync('.build');

                        _context3.next = 11;
                        return _promise2.default.all([(0, _fireWebpack.createServerBundle)(entry), (0, _fireWebpack.createLib)(entry)]);

                    case 11:
                        _context3.next = 13;
                        return (0, _sqlModels.createMigrations)();

                    case 13:
                        _context3.next = 15;
                        return startWeb();

                    case 15:
                    case 'end':
                        return _context3.stop();
                }
            }
        }, _callee3, this);
    }));

    function fly(_x, _x2) {
        return _ref.apply(this, arguments);
    }

    return fly;
}();